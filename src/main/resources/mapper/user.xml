<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.iclass.mvc.dao.UserMapper">

    <!-- 회원 가입 -->
    <insert id="insert" parameterType="UserDto">
        insert into users(id,name,password,email,gender,business)
        values(idx_seq.NEXTVAL,#{name}, #{password}, #{email},#{gender},#{business})
    </insert>

    <!-- 중복 검사 -->
    <select id="checkDuplicateEmail" resultType="int">
        SELECT count(*) FROM users WHERE email = #{email}
    </select>

    <!-- 내정보 찾기 -->
    <select id = "userInfoByEmail" resultType="UserDto">
        SELECT *
        FROM users
        WHERE email=#{email}
    </select>
    <select id = "userInfoById" resultType="UserDto">
        SELECT *
        FROM users
        WHERE id=#{id}
    </select>

    <update id="updateInfo" >
        UPDATE users
        SET
            email = #{email},
            name = #{name},
            password = #{password},
            tel = #{tel},
            address = #{address},
            gender = #{gender}
        WHERE email = #{email}
    </update>

    <insert id="kakaoInsert">
        insert into USERS (ID, NAME, EMAIL, HEART, GENDER)
        values (TO_CHAR(USER_ID_SEQ.NEXTVAL),#{name}, #{email},0,#{gender} )

    </insert>

    <select id="kakaoLogin" resultType="userDto">
        SELECT id, name,  email,  gender
        FROM USERS
        WHERE email=#{email}
    </select>

    <!--일반로그인 -->
    <select id="login" resultType="UserDto">
        SELECT *
        FROM users
        WHERE email =#{email} AND password = #{password}
    </select>

    <!-- 아이디 찾기 -->
    <select id="findId" resultType="UserDto">
        select email
        from USERS
        where name=#{name} and tel=#{tel}
    </select>

    <!-- 비밀번호 업데이트 -->
    <update id="updateidpw">
    UPDATE users
    SET password = #{password}
    WHERE email = #{email}
    </update>

    <!-- 이메일 내용 저장 -->

<!--    유저 이름과 이메일 일치 여부 검사-->
    <select id="checkUserEmailAndName" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS result
        FROM users
        WHERE email = #{userEmail} AND name = #{userName}
    </select>

    <!-- 사업자 분류 -->
    <select id="business" resultType="boolean">
        select CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS result
        from users
        where email = #{email} and business='BO'
    </select>

    <select id="selectHeartbyEmail" resultType="HeartHomeDto" parameterType="String">
        select *
        from HEART he
                 join HOME H
                      on he.IDX = H.IDX
        where he.email = #{email}
    </select>

</mapper>